events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Increase buffer size for upstream headers
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Add resolver directive
    resolver 127.0.0.11 valid=30s ipv6=off;

    server {
        listen 80;
        server_name powm.local.com;

        # Redirect all HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name powm.local.com;

        # SSL configuration
        ssl_certificate /etc/nginx/certs/pub-cert.pem;
        ssl_certificate_key /etc/nginx/certs/private-key.pem;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https; # Force HTTPS
        proxy_set_header X-Forwarded-Host $host;

        # Timeout settings
        proxy_read_timeout 36500000s;
        proxy_connect_timeout 36500000s;
        proxy_send_timeout 36500000s;

        proxy_redirect off;

        # Proxy to the backend server
        location / {
            # Use HTTP instead of HTTPS for upstream
            proxy_pass http://powm_web:80;

            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering off;
            proxy_request_buffering off;

            # Add error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 500 502 503 504 = @fallback;
        }

        # Fallback location
        location @fallback {
            return 503 "Service temporarily unavailable";
        }
    }
}